version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: isp_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: isp_root_password_2024
      MYSQL_DATABASE: isp_system
      MYSQL_USER: isp_user
      MYSQL_PASSWORD: isp_password_2024
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - isp_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # ISP Management Application
  isp_app:
    build: .
    container_name: isp_management
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://isp_user:isp_password_2024@mysql:3306/isp_system
      - POSTGRES_HOST=mysql
      - POSTGRES_USER=isp_user
      - POSTGRES_PASSWORD=isp_password_2024
      - POSTGRES_DATABASE=isp_system
      - DB_PORT=3306
      - NEXTAUTH_SECRET=your-secret-key-here-change-this
      - NEXTAUTH_URL=http://localhost:3000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - isp_network

  # RADIUS Server (FreeRADIUS)
  freeradius:
    image: freeradius/freeradius-server:latest
    container_name: isp_radius
    restart: unless-stopped
    ports:
      - "1812:1812/udp"  # Authentication
      - "1813:1813/udp"  # Accounting
    volumes:
      - ./radius-config:/etc/freeradius
      - radius_logs:/var/log/freeradius
    networks:
      - isp_network
    depends_on:
      - mysql

  # OpenVPN Server
  openvpn:
    image: kylemanna/openvpn:latest
    container_name: isp_openvpn
    restart: unless-stopped
    ports:
      - "1194:1194/udp"
    cap_add:
      - NET_ADMIN
    volumes:
      - openvpn_data:/etc/openvpn
    networks:
      - isp_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: isp_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - isp_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: isp_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - isp_app
    networks:
      - isp_network

volumes:
  mysql_data:
  openvpn_data:
  radius_logs:
  redis_data:

networks:
  isp_network:
    driver: bridge
